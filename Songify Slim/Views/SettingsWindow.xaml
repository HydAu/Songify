<controls:MetroWindow x:Class="Songify_Slim.Views.Window_Settings"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:local="clr-namespace:Songify_Slim.Properties"
                      mc:Ignorable="d"
                      Title="Settings" Height="473" MinHeight="400" Width="745" MinWidth="647" Loaded="SettingsWindow_Loaded"
                      ResizeMode="CanResizeWithGrip" WindowStartupLocation="CenterOwner" Closing="MetroWindow_Closing"
                     >
    <controls:MetroWindow.Resources>
        <Style x:Key="TextBoxTextBlock" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox">
            <Style.Setters>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="Padding" Value="0,0,0,0"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="Height" Value="18"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </controls:MetroWindow.Resources>
    <Grid>
        <TabControl Margin="10,0,10,0" TabStripPlacement="Left">
            <TabItem Header="{x:Static local:Resources.sw_tc_System}">
                <Border Margin="10,0,0,0" BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}">
                    <Grid Margin="10,12,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="{x:Static local:Resources.sw_tcSystem_lblLanguage}" Padding="0,5,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <Label Grid.Row="0" Content="{x:Static local:Resources.sw_tcSystem_translated}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="9" FontStyle="Italic" Margin="0,13,0,0" />
                        <ComboBox Grid.Row="0" x:Name="CbxLanguage" HorizontalAlignment="Right" VerticalAlignment="Center" Width="220" SelectionChanged="ComboBox_SelectionChanged">
                            <ComboBoxItem Content="{x:Static local:Resources.lang_en}" />
                            <ComboBoxItem Content="{x:Static local:Resources.lang_deDE}" />
                            <ComboBoxItem Content="{x:Static local:Resources.lang_ru}" />
                            <ComboBoxItem Content="{x:Static local:Resources.lang_es}" />
                            <ComboBoxItem Content="{x:Static local:Resources.lang_fr}" />
                        </ComboBox>
                        <controls:ToggleSwitch x:Name="ChbxAutostart"
                                           Content="{x:Static local:Resources.sw_tcSystem_Autostart}" VerticalAlignment="Top" Toggled="ChbxAutostartChecked"
                                            Focusable="False" FontFamily="Segoe UI"
                                            FontSize="12"
                                           ContentPadding="0"
                                            Width="467" Padding="0" BorderThickness="0" Grid.Row="2" />
                        <controls:ToggleSwitch x:Name="ChbxMinimizeSystray"
                                           Content="{x:Static local:Resources.sw_tcSystem_Minimize}" VerticalAlignment="Top"
                                           Toggled="ChbxMinimizeSystrayChecked"
                                           Focusable="False" FontFamily="Segoe UI"
                                           FontSize="12"
                                          ContentPadding="0"
                                            Width="467" Height="32" Grid.Row="3" />
                        <controls:ToggleSwitch x:Name="ChbxOpenQueueOnStartup"
                                           Content="{x:Static local:Resources.Sw_System_OpenQueueOnStartup}" VerticalAlignment="Top"
                                           Focusable="False" FontFamily="Segoe UI"
                                           FontSize="12"
                                           ContentPadding="0"
                                           Width="467" Height="32" Toggled="ChbxOpenQueueOnStartup_Toggled" Grid.Row="4" />
                        <Label Content="{x:Static local:Resources.sw_tcSystem_ChromeFetchRate}" HorizontalAlignment="Left"
                           VerticalAlignment="Top" Padding="0,5,5,5" Grid.Row="5" />
                        <controls:NumericUpDown x:Name="NudChrome" Minimum="1" Maximum="10" Interval="1"
                                            NumericInputMode="Numbers"
                                            ValueChanged="NudChrome_ValueChanged" Height="28"
                                            Padding="0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="145" Grid.Row="5" />
                        <Label Content="{x:Static local:Resources.Sw_System_PrivacyHeader}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top" Padding="0,5,5,5" FontSize="16" Grid.Row="6" />
                        <controls:ToggleSwitch x:Name="ToggleSwitchPrivacy" FontFamily="Segoe UI" FontSize="12"
                                           ContentPadding="0" VerticalAlignment="Top"
                                           OnContent="{x:Static local:Resources.Sw_System_Privacy}"
                                           OffContent="{x:Static local:Resources.Sw_System_Privacy}" Grid.Row="7" HorizontalAlignment="Left" Toggled="ToggleSwitchPrivacy_Toggled" />
                        <Label x:Name="LabelColor" Content="{x:Static local:Resources.sw_Appearance_Color}"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Top" Width="71" Padding="5" Grid.Row="9" />
                        <ComboBox x:Name="ComboBoxColor" Height="23" VerticalAlignment="Center"
                        SelectionChanged="ComboBoxColorSelectionChanged" HorizontalAlignment="Left" Width="234" Grid.Row="10" />
                        <controls:ToggleSwitch x:Name="ThemeToggleSwitch"
                        Width="145" FontFamily="Segoe UI" FontSize="12"
                        ContentPadding="0"
                        Height="32" VerticalAlignment="Top"
                        Padding="5,0,0,0" Toggled="ThemeToggleSwitchIsCheckedChanged"
                        OffContent="{x:Static local:Resources.sw_Appearance_ThemeLight}"
                        OnContent="{x:Static local:Resources.sw_Appearance_ThemeDark}" Grid.Row="10" HorizontalAlignment="Right" />
                        <Label Content="{x:Static local:Resources.sw_tc_Appearance}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top" Padding="0,5,5,5" FontSize="16" Grid.Row="8" />
                        <Label Content="{x:Static local:Resources.sw_tcSystem_Behavior}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top" Padding="0,5,5,5" FontSize="16" Grid.Row="1" />
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="{x:Static local:Resources.sw_tc_Output}">
                <Border Margin="10,0,0,0" BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}">
                    <Grid  Margin="10,12,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="38"/>
                            <RowDefinition Height="38"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="38"/>
                            <RowDefinition Height="38"/>
                            <RowDefinition Height="38"/>
                            <RowDefinition Height="38"/>
                            <RowDefinition Height="38"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="72*"/>
                            <ColumnDefinition Width="95*"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="{x:Static local:Resources.sw_tcOutput_Directory}" HorizontalAlignment="Left"
                           VerticalAlignment="Center" Height="32" Width="99" />
                        <TextBox Grid.Row="0" Grid.Column="1" x:Name="TxtbxOutputdirectory" Height="26" TextWrapping="Wrap" VerticalAlignment="Center" IsReadOnly="True" Margin="0,0,64,0" />
                        <Button x:Name="BtnOutputdirectory" Content="..."
                            VerticalAlignment="Center" Click="BtnOutputdirectoryClick"
                            RenderTransformOrigin="-1.138,0.407" Grid.Row="0" Grid.Column="1" Margin="0,0,32,0" Height="26" HorizontalAlignment="Right" Width="26" />
                        <Button x:Name="BtnCopyToClip"
                            VerticalAlignment="Center" Click="BtnCopyToClipClick" Padding="5"
                            Focusable="False" ToolTip="Copy to Clipboard" Height="26" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Width="26">

                            <iconPacks:PackIconFontAwesome Width="15" Height="15" Kind="LinkSolid" Margin="-1,-1,-1,-1" />
                        </Button>
                        <Label Content="{x:Static local:Resources.sw_tcOutput_Format}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="1"
                               Grid.Column="0" Height="32" />
                        <TextBox x:Name="TxtbxOutputformat" Height="26"
                             TextWrapping="NoWrap" VerticalAlignment="Center"
                             TextChanged="TxtbxOutputformat_TextChanged" Grid.Row="1" Grid.Column="1">
                            <TextBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Tag="1" x:Name="MenuBtnArtist" Header="Artist" Click="MenuBtnArtist_Click" />
                                    <MenuItem Tag="1" x:Name="MenuBtnTitle" Header="Title" Click="MenuBtnTitle_Click" />
                                    <MenuItem Tag="1" x:Name="MenuBtnExtra" Header="Extra" Click="MenuBtnExtra_Click" />
                                    <MenuItem Tag="1" x:Name="MenuBtnReq" Header="Requester" Click="MenuBtnReq_Click" />
                                    <MenuItem Tag="1" x:Name="MenuBtnUrl" Header="URL" Click="MenuBtnUrl_Click" />
                                </ContextMenu>
                            </TextBox.ContextMenu>
                        </TextBox>
                        <controls:ToggleSwitch x:Name="ChbxCustomPause" Content="{x:Static local:Resources.sw_tcOutput_PauseText}" Toggled="ChbxCustompauseChecked" FontFamily="Segoe UI"
                                           Focusable="False" FontSize="12" Grid.Row="4"
                                           Grid.Column="0" HorizontalAlignment="Stretch" Height="32" />
                        <TextBox x:Name="TxtbxCustompausetext" TextWrapping="Wrap"
                             VerticalAlignment="Center"
                             controls:TextBoxHelper.Watermark="{x:Static local:Resources.sw_tcOutput_PauseWatermark}"
                             TextChanged="TxtbxCustompausetext_TextChanged" IsEnabled="False" Grid.Row="4" Grid.Column="1" Height="26" />
                        <controls:ToggleSwitch x:Name="ChbxUpload"
                                           Content="{x:Static local:Resources.sw_tcOutput_UploadSongInfo}" Toggled="ChbxUpload_Checked"
                                           Focusable="False" FontFamily="Segoe UI"
                                           FontSize="12"
                                           ContentPadding="0" ContentDirection="RightToLeft" Grid.Row="5"
                                           Grid.Column="0" HorizontalAlignment="Stretch" Height="32" />
                        <controls:ToggleSwitch x:Name="ChbxCover"
                                           Content="{x:Static local:Resources.sw_tcOutput_DownloadAlbum}"
                                           Focusable="False" FontFamily="Segoe UI"
                                           FontSize="12"
                                           ContentPadding="0"
                                           Toggled="ChbxCover_Checked" Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Height="32" />
                        <Button x:Name="BtnCopyUrl" HorizontalAlignment="Left" VerticalAlignment="Center"
                            Width="26" Click="BtnCopyURL_Click" Grid.Row="5" Grid.Column="1" Height="26">
                            <iconPacks:PackIconFontAwesome Width="15" Height="15" Kind="LinkSolid" Margin="-1,-2,-1,-2" />
                        </Button>
                        <controls:ToggleSwitch x:Name="ChbxSplit"
                                           Content="{x:Static local:Resources.sw_tcOutput_SplitArtist}"
                                           Focusable="False" FontFamily="Segoe UI"
                                           FontSize="12"
                                           ContentPadding="0"
                                           Toggled="ChbxSplit_Checked" Grid.Row="6" Grid.Column="0" HorizontalAlignment="Stretch" Height="32" />
                        <CheckBox x:Name="ChbxSpaces" Content="{x:Static local:Resources.sw_tcOutput_AddSpaces}"
                              HorizontalAlignment="Left" VerticalAlignment="Center"
                              Checked="ChbxSpaces_Checked" Unchecked="ChbxSpaces_Checked" RenderTransformOrigin="0.47,1.039" Grid.Column="1" Grid.Row="3" Height="18" />
                        <controls:NumericUpDown Grid.Row="3" Grid.Column="1" x:Name="NudSpaces" Minimum="1" Maximum="10" Interval="1"
                                            NumericInputMode="Numbers"
                                            ValueChanged="nud_Spaces_ValueChanged" Height="26"
                                            Padding="0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="121"
                                            UpDownButtonsWidth="16" Margin="131,0,0,0" />
                        <Label Content="{x:Static local:Resources.sw_tcOutput_Format2}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="2"
                           Grid.Column="0" Height="32" MinWidth="160" Visibility="Collapsed" />
                        <TextBox x:Name="TxtbxOutputformat2" Height="26"
                        TextWrapping="NoWrap" VerticalAlignment="Center"
                        TextChanged="TxtbxOutputformat2_TextChanged" Grid.Row="2" Grid.Column="1" Visibility="Collapsed">
                            <TextBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Tag="2" x:Name="MenuBtnArtist2" Header="Artist" Click="MenuBtnArtist_Click" />
                                    <MenuItem Tag="2" x:Name="MenuBtnTitle2" Header="Title" Click="MenuBtnTitle_Click" />
                                    <MenuItem Tag="2" x:Name="MenuBtnExtra2" Header="Extra" Click="MenuBtnExtra_Click" />
                                    <MenuItem Tag="2" x:Name="MenuBtnReq2" Header="Requester" Click="MenuBtnReq_Click" />
                                    <MenuItem Tag="2" x:Name="MenuBtnUrl2" Header="URL" Click="MenuBtnUrl_Click" />
                                </ContextMenu>
                            </TextBox.ContextMenu>
                        </TextBox>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem x:Name="TabItemTwitch" Header="{x:Static local:Resources.sw_tc_Integration}">
                <Border Margin="10,0,0,0" BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}">
                    <Grid Margin="10,12,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <DockPanel x:Name="PnlTwich" Margin="0,6,0,6">
                                <Border CornerRadius="40" Width="60" Height="60" BorderThickness="3" BorderBrush="{DynamicResource MahApps.Brushes.Accent}">
                                    <Border.Background>
                                        <ImageBrush x:Name="ImgTwitchProfile" Stretch="Fill" ImageSource="/songify.ico"/>
                                    </Border.Background>
                                </Border>
                                <StackPanel Orientation="Vertical" Margin="10,0,0,0" DockPanel.Dock="Right" VerticalAlignment="Center">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Tag="main" x:Name="LblTwitchName" Content="{x:Static local:Resources.sw_Integration_Twitch}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        <Button Grid.Column="1" Margin="16,0,0,0"  x:Name="BtnTwitchLogout" VerticalAlignment="Center" Click="BtnTwitchLogout_OnClick" ToolTip="{x:Static local:Resources.sw_Twitch_LogOut}" Tag="Main">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=BtnLogInTwitch, Path=Visibility}" Value="Collapsed">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=BtnLogInTwitch, Path=Visibility}" Value="Visible">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <iconPacks:ForkAwesome Width="15" Height="15" Kind="SignOut"/>
                                        </Button>
                                    </Grid>
                                </StackPanel>
                            </DockPanel>
                            <DockPanel x:Name="PnlTwichBot" Margin="0,6,0,6" Grid.Row="0" Grid.Column="1">
                                <Border CornerRadius="40" Width="60" Height="60" BorderThickness="3" BorderBrush="{DynamicResource MahApps.Brushes.Accent}">
                                    <Border.Background>
                                        <ImageBrush x:Name="ImgTwitchBotProfile" Stretch="Fill" ImageSource="/songify.ico"/>
                                    </Border.Background>
                                </Border>
                                <StackPanel Orientation="Vertical" Margin="10,0,0,0" DockPanel.Dock="Right" VerticalAlignment="Center">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Tag="bot" x:Name="LblTwitchBotName" Content="Twitch Bot" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        <Button Grid.Column="1" Margin="16,0,0,0"  x:Name="BtnTwitchBotLogout" VerticalAlignment="Center" Click="BtnTwitchLogout_OnClick" ToolTip="{x:Static local:Resources.sw_Twitch_LogOut}" Tag="Bot">
                                            <iconPacks:ForkAwesome Width="15" Height="15" Kind="SignOut"/>
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=BtnLogInTwitch, Path=Visibility}" Value="Collapsed">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=BtnLogInTwitch, Path=Visibility}" Value="Visible">
                                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                </StackPanel>
                            </DockPanel>
                            <Button x:Name="BtnLogInTwitch" Click="BtnLogInTwitch_Click" VerticalAlignment="Bottom" Grid.Row="1" Grid.Column="0" Margin="6,0,6,0">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <iconPacks:ForkAwesome Kind="Twitch"/>
                                        <TextBlock Text="{x:Static local:Resources.mw_menu_Twitch_TwitchLogin}" Margin="6,0,0,0"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button x:Name="BtnLogInTwitchBot" Click="BtnLogInTwitchBot_OnClick" VerticalAlignment="Bottom" Grid.Row="1" Grid.Column="1" Margin="6,0,6,0">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <iconPacks:ForkAwesome Kind="Twitch"/>
                                        <TextBlock Text="{x:Static local:Resources.mw_menu_Twitch_TwitchLogin}" Margin="6,0,0,0"/>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </Grid>

                        <!--#region Twitch Credentials (not using API) -->
                        <controls:ToggleSwitch x:Name="CheckShowCred" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Content="Show Credentials" Margin="0,6,0,6"/>
                        <Label Content="Chat Account"  Grid.Row="1" Grid.Column="0" Margin="6,6,6,6" VerticalAlignment="Center"/>
                        <ComboBox x:Name="CbAccountSelection" Grid.Row="1" Grid.Column="0" Margin="90,6,0,6" HorizontalAlignment="Left" Width="164" SelectionChanged="CbAccountSelection_SelectionChanged"/>
                        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=CheckShowCred, Path=IsOn}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=CheckShowCred, Path=IsOn}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Margin="0,4"  Content="Account name" HorizontalAlignment="Left" VerticalAlignment="Top"
                                   Padding="0,5,5,5" Grid.Row="0" Grid.Column="0" />
                            <TextBox Margin="0,4" x:Name="TxtbxTwUser" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text=""
                                                 VerticalAlignment="Top"
                                                 controls:TextBoxHelper.Watermark="Account" TextChanged="txtbx_twUser_TextChanged"
                                                 Grid.Row="0" Grid.Column="1" />
                            <Label Margin="0,4" Content="oAuth Token" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="0,5,5,5" Grid.Row="1"
                                       Grid.Column="0" />
                            <Grid Margin="0,4" Grid.Row="1" Grid.Column="1">
                                <PasswordBox x:Name="TxtbxTwOAuth" HorizontalAlignment="Stretch"
                                         controls:TextBoxHelper.Watermark="oAuth Token" VerticalAlignment="Stretch"
                                         PasswordChanged="txtbx_twOAuth_PasswordChanged" Margin="0,0,30,0" />
                                <Button Content="?" HorizontalAlignment="Right" VerticalAlignment="Top"
                           Click="Button_Click" ToolTip="Click here to get the oAuth token." Width="27"/>
                            </Grid>
                            <Label Margin="0,4" Content="Channel to join" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="0,5,5,5" Grid.Row="2"
                                       Grid.Column="0" />
                            <TextBox Margin="0,4" x:Name="TxtbxTwChannel" HorizontalAlignment="Stretch" TextWrapping="Wrap"
                                     controls:TextBoxHelper.Watermark="{x:Static local:Resources.sw_Integration_TwitchChWatermark}"
                                     VerticalAlignment="Top"
                                     TextChanged="txtbx_twChannel_TextChanged" Grid.Row="2" Grid.Column="1" />
                        </Grid>
                        <!--#endregion-->

                        <controls:ToggleSwitch Margin="0,4" x:Name="ChbxTwAutoconnect"
                                                   Content="{x:Static local:Resources.sw_Integration_Autoconnect}"
                                                   Toggled="Chbx_TwAutoconnect_Checked" VerticalAlignment="Top" Grid.Row="4" Grid.ColumnSpan="2" Grid.Column="0"
                                                   HorizontalAlignment="Stretch" />
                        <controls:ToggleSwitch x:Name="TglAnnounceInChat" VerticalAlignment="Top" Content="{x:Static local:Resources.Sw_intergration_AutoAnnounce}" Toggled="tgl_AnnounceInChat_Toggled" Grid.Row="5" Grid.Column="0" HorizontalAlignment="Stretch" Margin="0,4,0,4" Grid.ColumnSpan="2" />
                        <StackPanel Orientation="Vertical" Grid.ColumnSpan="2"  Grid.Row="6" Grid.Column="0" >
                            <controls:ToggleSwitch x:Name="TglOnlyWorkWhenLive" VerticalAlignment="Top" Toggled="Tgl_OnlyWorkWhenLive_OnToggled" HorizontalAlignment="Stretch" Margin="0,4,0,4" Height="32" VerticalContentAlignment="Center">
                                <controls:ToggleSwitch.Content>
                                    <TextBlock Text="{x:Static local:Resources.Sw_Integration_OnlyWorkWhenLive}" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </controls:ToggleSwitch.Content>
                            </controls:ToggleSwitch>
                            <controls:ToggleSwitch x:Name="TglInformChat" VerticalAlignment="Top" Toggled="tgl_InformChat_Toggled" HorizontalAlignment="Stretch" Margin="0,4,0,4" Height="32" VerticalContentAlignment="Center" ToolTip="Enabling this will send a message to chat if an action has been cancelled due to the stream being offline.">
                                <controls:ToggleSwitch.Content>
                                    <TextBlock Text="{x:Static local:Resources.Sw_Integration_StreamNotLifeNotification}" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </controls:ToggleSwitch.Content>
                            </controls:ToggleSwitch>

                        </StackPanel>

                        <Button Visibility="Collapsed" Margin="0,4" Grid.Row="7" x:Name="BtnBotresponse"
                                    Content="{x:Static local:Resources.sw_Integration_ConfigureResponses}" Click="btn_Botresponse_Click" FontSize="14" Grid.ColumnSpan="2"
                                    Grid.Column="0" />
                    </Grid>
                </Border>
            </TabItem>
            <TabItem x:Name="TabItemTwitchAccounts" Visibility="Collapsed" Header="Accounts" Padding="20,0,0,0">
                <TabItem.Style>
                    <Style BasedOn="{StaticResource {x:Type TabItem}}" TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitch, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitchAccounts, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitchReward, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitchSr, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=TabItemTwitch, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=TabItemTwitchAccounts, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=TabItemTwitchReward, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=TabItemTwitchSr, Path=IsSelected}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <Border Margin="10,0,0,0" BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}">
                </Border>
            </TabItem>
            <TabItem x:Name="TabItemTwitchReward" Visibility="Visible"  Header="Rewards" Padding="20,0,0,0">
                <TabItem.Style>
                    <Style BasedOn="{StaticResource {x:Type TabItem}}" TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitch, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitchAccounts, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitchReward, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitchSr, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=TabItemTwitch, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=TabItemTwitchAccounts, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=TabItemTwitchReward, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=TabItemTwitchSr, Path=IsSelected}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <Border Margin="10,0,0,0" BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}">
                    <TabControl Margin="10,12,0,0">
                        <TabItem Header="Song Requests">
                            <Grid x:Name="GrdTwitchReward">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBox IsReadOnly="True" x:Name="TxtbxRewardId" HorizontalAlignment="Left" Height="23" Text=""
                                VerticalAlignment="Center" controls:TextBoxHelper.Watermark="Reward ID" TextChanged="txtbx_RewardID_TextChanged" Grid.Row="2"
                                Grid.Column="0" Grid.ColumnSpan="2" Width="264" Visibility="Collapsed" />
                                <CheckBox x:Name="ChbxMessageLogging"
                                Content="{x:Static local:Resources.sw_SpotifySR_MessageLogging}"
                                HorizontalAlignment="Left" VerticalAlignment="Top"
                                Checked="Chbx_MessageLogging_Checked" Unchecked="Chbx_MessageLogging_Checked" Grid.Row="2" Margin="0,4,0,0" Visibility="Hidden" Grid.Column="0"  />
                                <TextBlock Text="{x:Static local:Resources.sw_Spotify_RewardSR}" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,0,6"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" SelectionChanged="CbxRewards_OnSelectionChanged" x:Name="CbxRewards" Height="23" Margin="0,0,0,6" Tag="sr" />
                                <Button x:Name="BtnUpdateRewards" Width="26" Height="26" HorizontalAlignment="Right" Click="BtnUpdateRewards_Click" VerticalAlignment="Top"
                                        Grid.Row="0" Grid.Column="1" Margin="0,0,0,6">
                                    <Button.Content>
                                        <iconPacks:PackIconForkAwesome Kind="Refresh" Width="12" Height="12" />
                                    </Button.Content>
                                </Button>

                                <TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Text="Disabled due to issues with PubSub" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,6"></TextBlock>
                                <TextBlock Text="{x:Static local:Resources.sw_Spotify_RewardSkip}" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,0,6" IsEnabled="False" Opacity="0.1"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" SelectionChanged="CbxRewards_OnSelectionChanged" x:Name="CbxRewardsSkip" VerticalAlignment="Center" Height="23" Margin="0,0,0,6" Tag="skip" IsEnabled="False" Panel.ZIndex="-1" Opacity="0.1" />

                                <Button x:Name="BtnCreateNewReward" Grid.Column="1" Grid.Row="11" Content="{x:Static local:Resources.sw_Twitch_Rewards_CreateNewReward}" Margin="4,0,4,4" VerticalAlignment="Bottom" Click="BtnCreateNewReward_Click" IsEnabled="False"></Button>
                                <TextBlock Margin="0,6,0,6" Text="{x:Static local:Resources.Sw_Integration_RefundOn}" Grid.Row="4" Grid.ColumnSpan="2" Grid.Column="0"></TextBlock>
                                <Grid x:Name="GridNonManageable" Grid.Row="5" Grid.Column="0" Background="{DynamicResource MahApps.Brushes.Window.Background}" Grid.RowSpan="5" Grid.ColumnSpan="2" Panel.ZIndex="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" x:Name="TextRefundDisclaimer" Text="{x:Static local:Resources.sw_Integration_RefundDisclaimer}"  HorizontalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" Width="329" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="1" Visibility="Collapsed" x:Name="SMILEY" Text=":)"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="27" RenderTransformOrigin="0.5,0.5" FontWeight="Bold">
                                        <TextBlock.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="90"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>
                                <CheckBox x:Name="ChkRefundUserLevel" Tag="0" Margin="5,0,0,4"  Grid.Row="5" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Checked="CheckRefundChecked" Unchecked="CheckRefundUnchecked">
                                    <TextBlock Text ="{x:Static local:Resources.Sw_Integration_RefundUserLevelLow}" TextWrapping="Wrap"/>
                                </CheckBox>
                                <CheckBox x:Name="ChkRefundUserBlocked" Tag="1" Margin="0,0,0,4"  Grid.Row="5" HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Column="1"  Checked="CheckRefundChecked" Unchecked="CheckRefundUnchecked">
                                    <TextBlock Text ="{x:Static local:Resources.Sw_Integration_RefundUSerBlocked}" TextWrapping="Wrap"/>
                                </CheckBox>
                                <CheckBox x:Name="ChkRefundSpotifyNotConnected" Tag="2" Margin="5,0,0,4"  Grid.Row="6" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top"  Checked="CheckRefundChecked" Unchecked="CheckRefundUnchecked">
                                    <TextBlock Text ="{x:Static local:Resources.Sw_Integration_RefundSpotifyNotConnected}" TextWrapping="Wrap"/>
                                </CheckBox>
                                <CheckBox x:Name="ChkRefundSongUnavailable" Tag="3" Margin="0,0,0,4"  Grid.Row="6" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1"  Checked="CheckRefundChecked" Unchecked="CheckRefundUnchecked">
                                    <TextBlock Text ="{x:Static local:Resources.Sw_Integration_RefundSongNotAvailable}" TextWrapping="Wrap"/>
                                </CheckBox>
                                <CheckBox x:Name="ChkRefundArtistBlocked" Tag="4" Margin="5,0,0,4"  Grid.Row="7" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="0"  Checked="CheckRefundChecked" Unchecked="CheckRefundUnchecked">
                                    <TextBlock Text ="{x:Static local:Resources.Sw_Integration_RefundArtistBlocked}" TextWrapping="Wrap"/>
                                </CheckBox>
                                <CheckBox x:Name="ChkRefundSongLength" Tag="5" Margin="0,0,0,4"  Grid.Row="7" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1"  Checked="CheckRefundChecked" Unchecked="CheckRefundUnchecked">
                                    <TextBlock Text ="{x:Static local:Resources.Sw_Integration_RefundSongTooLong}" TextWrapping="Wrap"/>
                                </CheckBox>
                                <CheckBox x:Name="ChkRefundSongInQueue" Tag="6" Margin="5,0,0,4"  Grid.Row="8" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="0"  Checked="CheckRefundChecked" Unchecked="CheckRefundUnchecked">
                                    <TextBlock Text="{x:Static local:Resources.Sw_Integration_RefundSongAlreadyInQueue}" TextWrapping="Wrap"/>
                                </CheckBox>
                                <CheckBox x:Name="ChkRefundNothingFound" Tag="7" Margin="0,0,0,4"  Grid.Row="8" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1"  Checked="CheckRefundChecked" Unchecked="CheckRefundUnchecked">
                                    <TextBlock Text ="{x:Static local:Resources.Sw_Integration_RefundNoSongFound}" TextWrapping="Wrap"/>
                                </CheckBox>
                                <CheckBox x:Name="ChkRefundSongAdded" Tag="8" Margin="5,0,0,4"  Grid.Row="9" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="0"  Checked="CheckRefundChecked" Unchecked="CheckRefundUnchecked">
                                    <TextBlock Text ="{x:Static local:Resources.Sw_Integration_RefundSongAdded}" TextWrapping="Wrap"/>
                                </CheckBox>
                                <CheckBox x:Name="ChkRefundEverything" Tag="-1" Margin="0,0,0,4"  Grid.Row="9" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" FontWeight="Bold"  Checked="CheckRefundChecked" Unchecked="CheckRefundUnchecked">
                                    <TextBlock Text ="{x:Static local:Resources.Sw_Integration_RefundAlways}" TextWrapping="Wrap"/>
                                </CheckBox>
                            </Grid>
                        </TabItem>
                        <TabItem IsEnabled="False" Header="|" IsHitTestVisible="False" Visibility="Collapsed"/>
                        <TabItem Header="Reward Goal"  Visibility="Collapsed">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="State" Grid.Row="0" Grid.Column="0"/>
                                <Label Content="Song URL" Grid.Row="0" Grid.Column="1"/>
                                <Label Content="Amount needed" Grid.Row="0" Grid.Column="2"/>
                                <Label Content="Reward" Grid.Row="0" Grid.Column="3"/>
                                <controls:ToggleSwitch x:Name="ToggleRewardGoalEnabled" Content="Enabled" Grid.Row="1" Grid.Column="0" Margin="0,0,6,0" MinWidth="0" Toggled="ToggleRewardGoalEnabled_Toggled"/>
                                <TextBox Grid.Row="1" x:Name="TextBoxRewardGoalSong" Grid.Column="1" controls:TextBoxHelper.Watermark="Song Link" Margin="0,0,6,0" TextChanged="TextBoxRewardGoalSong_TextChanged"></TextBox>
                                <controls:NumericUpDown x:Name="NumUpDpwnRewardGoalAmount"  Grid.Row="1" Minimum="0" Grid.Column="2" NumericInputMode="Numbers" ParsingNumberStyle="Integer" Margin="0,0,6,0" ValueChanged="NumUpDpwnRewardGoalAmount_ValueChanged"></controls:NumericUpDown>
                                <ComboBox x:Name="ComboboxRewardGoalReward" Grid.Row="1" Grid.Column="3" Tag="reward" SelectionChanged="CbxRewards_OnSelectionChanged"></ComboBox>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Border>
            </TabItem>
            <TabItem x:Name="TabItemTwitchSr" Visibility="Visible"  Header="SongRequest" Padding="20,0,0,0" ToolTip="Song Requests">
                <TabItem.Style>
                    <Style BasedOn="{StaticResource {x:Type TabItem}}" TargetType="TabItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitch, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitchAccounts, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitchReward, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=TabItemTwitchSr, Path=IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=TabItemTwitch, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=TabItemTwitchAccounts, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=TabItemTwitchReward, Path=IsSelected}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=TabItemTwitchSr, Path=IsSelected}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TabItem.Style>
                <Border Margin="10,0,0,0" BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}">
                    <Grid Margin="10,12,0,0">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                            <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                                <DockPanel LastChildFill="True">
                                    <controls:ToggleSwitch x:Name="ChbxTwReward"
                                                   Content="{x:Static local:Resources.sw_SpotifySR_SRReward}"
                                                   HorizontalAlignment="Left" VerticalAlignment="Top" Toggled="Chbx_TwReward_Checked"
                                                   Focusable="False" FontFamily="Segoe UI"
                                                   FontSize="12"
                                                   ContentPadding="0"
                                                   Width="355" Height="36" />
                                    <Button x:Name="BtnFocusRewards" Content="{x:Static local:Resources.Sw_Integration_ManageRewards}" Click="BtnFocusRewards_Click"></Button>
                                </DockPanel>
                                <controls:ToggleSwitch x:Name="ChbxAutoClear"
                                                       Content="{x:Static local:Resources.sw_SpotifySR_ClearQ}" VerticalAlignment="Top" Toggled="Chbx_AutoClear_Checked"
                                                       Focusable="False" FontFamily="Segoe UI"
                                                       FontSize="12"
                                                       ContentPadding="0"
                                                       Width="470" Height="36" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                                <DockPanel LastChildFill="True">
                                    <Label Content="{x:Static local:Resources.sw_SpotifySR_Userlevel_command}" Padding="0,5,5,5" VerticalAlignment="Center"/>
                                    <ComboBox x:Name="CbxAllowedUserLevelsCommand" SelectionChanged="Selector_OnSelectionChanged" IsReadOnly="True" SelectedIndex="0" HorizontalAlignment="Right" Width="185">
                                        <ComboBox.Items>
                                            <ComboBoxItem Content="User Levels (Command)">
                                                <ComboBoxItem.Style>
                                                    <Style BasedOn="{StaticResource {x:Type ComboBoxItem}}" TargetType="ComboBoxItem">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsDropDownOpen, ElementName=CbxAllowedUserLevelsCommand}" Value="True">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ComboBoxItem.Style>
                                            </ComboBoxItem>
                                            <ComboBoxItem Margin="0" Padding="0">
                                                <CheckBox Tag="0" Content="Viewer (everyone)" x:Name="ChckULCommandViewer" Checked="CbxUserLevelsCommandChecked" Unchecked="CbxUserLevelsCommandUnchecked" Width="180" Height="22" Margin="1,0,0,0"/>
                                            </ComboBoxItem>
                                            <ComboBoxItem Margin="0" Padding="0">
                                                <CheckBox Tag="1" Content="Subscriber" x:Name="ChckULCommandSub" Checked="CbxUserLevelsCommandChecked" Unchecked="CbxUserLevelsCommandUnchecked" Width="180" Height="22" Margin="1,0,0,0"/>
                                            </ComboBoxItem>
                                            <ComboBoxItem Margin="0" Padding="0">
                                                <CheckBox Tag="2" Content="VIP" x:Name="ChckULCommandVip" Checked="CbxUserLevelsCommandChecked" Unchecked="CbxUserLevelsCommandUnchecked" Width="180" Height="22" Margin="1,0,0,0"/>
                                            </ComboBoxItem>
                                            <ComboBoxItem Margin="0" Padding="0">
                                                <CheckBox Tag="3" Content="Moderator" x:Name="ChckULCommandMod" Checked="CbxUserLevelsCommandChecked" Unchecked="CbxUserLevelsCommandUnchecked" Width="180" Height="22" Margin="1,0,0,0"/>
                                            </ComboBoxItem>
                                        </ComboBox.Items>
                                    </ComboBox>
                                </DockPanel>
                                <DockPanel LastChildFill="True" Margin="0,6,0,0">
                                    <Label Content="{x:Static local:Resources.sw_SpotifySR_Userlevel_reward}" Padding="0,5,5,5" VerticalAlignment="Center"/>
                                    <ComboBox x:Name="CbxAllowedUserLevelsReward" SelectionChanged="Selector_OnSelectionChanged" IsReadOnly="True" SelectedIndex="0" HorizontalAlignment="Right" Width="185">
                                        <ComboBox.Items>
                                            <ComboBoxItem Content="User Levels (Reward)">
                                                <ComboBoxItem.Style>
                                                    <Style BasedOn="{StaticResource {x:Type ComboBoxItem}}" TargetType="ComboBoxItem">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsDropDownOpen, ElementName=CbxAllowedUserLevelsReward}" Value="True">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ComboBoxItem.Style>
                                            </ComboBoxItem>
                                            <ComboBoxItem Margin="0" Padding="0">
                                                <CheckBox Tag="0" Content="Viewer (everyone)" x:Name="ChckULRewardViewer" Unchecked="CbxUserLevelsRewardUnchecked" Checked="CbxUserLevelsRewardChecked" Width="180" Height="22" Margin="1,0,0,0"/>
                                            </ComboBoxItem>
                                            <ComboBoxItem Margin="0" Padding="0">
                                                <CheckBox Tag="1" Content="Subscriber" x:Name="ChckULRewardSub" Unchecked="CbxUserLevelsRewardUnchecked" Checked="CbxUserLevelsRewardChecked" Width="180" Height="22" Margin="1,0,0,0"/>
                                            </ComboBoxItem>
                                            <ComboBoxItem Margin="0" Padding="0">
                                                <CheckBox Tag="2" Content="VIP" x:Name="ChckULRewardVip" Unchecked="CbxUserLevelsRewardUnchecked" Checked="CbxUserLevelsRewardChecked" Width="180" Height="22" Margin="1,0,0,0"/>
                                            </ComboBoxItem>
                                            <ComboBoxItem Margin="0" Padding="0">
                                                <CheckBox Tag="3" Content="Moderator" x:Name="ChckULRewardMod" Unchecked="CbxUserLevelsRewardUnchecked" Checked="CbxUserLevelsRewardChecked" Width="180" Height="22" Margin="1,0,0,0"/>
                                            </ComboBoxItem>
                                        </ComboBox.Items>
                                    </ComboBox>
                                </DockPanel>
                                <DockPanel Margin="0,6,0,0" Visibility="Collapsed">
                                    <Label Content="{x:Static local:Resources.Sw_Integration_MinUserLevel}" HorizontalAlignment="Left"
                                   VerticalAlignment="Center" Padding="0,5,5,5" />
                                    <ComboBox x:Name="CbxUserLevels" Width="151" HorizontalAlignment="Right" VerticalAlignment="Top" SelectionChanged="CbxUserLevels_SelectionChanged" DockPanel.Dock="Right" />
                                </DockPanel>
                                <DockPanel Visibility="Visible" Margin="0,6,0,0" LastChildFill="False">
                                    <TextBlock Text="{x:Static local:Resources.Sw_Integration_MaxSrUser}" HorizontalAlignment="Left"
                                       VerticalAlignment="Center" Margin="0,0,0,0" TextWrapping="WrapWithOverflow" MaxWidth="250"/>
                                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Center">
                                        <ComboBox Height="28" SelectedIndex="0" x:Name="CbxUserLevelsMaxReq" Width="145" HorizontalAlignment="Right" VerticalAlignment="Center" SelectionChanged="CbxUserLevelsMaxReq_SelectionChanged" Margin="0,0,6,0">
                                            <ComboBox.Style>
                                                <Style BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="ComboBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=ToggleSwitchUnlimitedSr, Path=IsOn}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=ToggleSwitchUnlimitedSr, Path=IsOn}" Value="False">
                                                            <Setter Property="IsEnabled" Value="True"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ComboBox.Style>
                                        </ComboBox>
                                        <controls:NumericUpDown x:Name="NudMaxReq" Minimum="1" Maximum="100" Interval="1"
                                                        NumericInputMode="Numbers" Margin="0,0,6,0"
                                                        ValueChanged="NudMaxReq_ValueChanged" Height="28"
                                                        Padding="0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="119" UpDownButtonsWidth="22" DecimalPointCorrection="Number">
                                            <controls:NumericUpDown.Style>
                                                <Style TargetType="controls:NumericUpDown">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=ToggleSwitchUnlimitedSr, Path=IsOn}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=ToggleSwitchUnlimitedSr, Path=IsOn}" Value="False">
                                                            <Setter Property="IsEnabled" Value="True"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </controls:NumericUpDown.Style>
                                        </controls:NumericUpDown>
                                        <Button ToolTip="Sync to all user levels" x:Name="BtnSync" Click="BtnSync_Click" Height="28">
                                            <Button.Content>
                                                <iconPacks:PackIconForkAwesome Kind="Refresh" Width="14" Height="14" RenderTransformOrigin="0.5,0.5">
                                                    <iconPacks:PackIconForkAwesome.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="90" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </iconPacks:PackIconForkAwesome.RenderTransform>
                                                </iconPacks:PackIconForkAwesome>
                                            </Button.Content>
                                        </Button>
                                    </StackPanel>
                                </DockPanel>
                                <controls:ToggleSwitch x:Name="ToggleSwitchUnlimitedSr" Content="{x:Static local:Resources.Sw_SpotifySR_UnlimitedSRs}" HorizontalAlignment="Right" Toggled="ToggleSwitchUnlimitedSR_Toggled"/>
                                <DockPanel Margin="0,6,0,0">
                                    <Label Content="{x:Static local:Resources.sw_SpotifySR_CommandCD}" HorizontalAlignment="Left"
                           VerticalAlignment="Center" Margin="0,0,0,0" />
                                    <controls:NumericUpDown x:Name="NudCooldown" Minimum="1" Maximum="100" Interval="1"
                                            NumericInputMode="Numbers" Margin="0,0,0,0"
                                            ValueChanged="NudCooldown_ValueChanged"
                                            Padding="0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="151" DecimalPointCorrection="Number" DockPanel.Dock="Right" Height="28" />
                                </DockPanel>
                                <DockPanel Margin="0,6,0,0">
                                    <Label Content="{x:Static local:Resources.sw_SpotifySR_MaxLength}" HorizontalAlignment="Left"
                                   VerticalAlignment="Center" />
                                    <controls:NumericUpDown x:Name="NudMaxlength" Minimum="1" Maximum="100" Interval="1"
                                            NumericInputMode="Numbers"
                                            ValueChanged="NudMaxlength_ValueChanged" Height="28"
                                            Padding="0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="151" DecimalPointCorrection="Number" DockPanel.Dock="Right" />
                                </DockPanel>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="Responses" Padding="20,0,0,0">
                <Border Margin="10,0,0,0" BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}">
                    <Grid Margin="10,12,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="{x:Static local:Resources.brw_Header}" HorizontalAlignment="Left" Margin="0"
                               VerticalAlignment="Top" />
                        <ScrollViewer Grid.Row="1" HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch">
                            <ContentControl x:Name="Cctrl" Content="ContentControl" Margin="5,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        </ScrollViewer>
                        <Border Grid.Row="2" Margin="-10,5,-10,0" VerticalAlignment="Bottom" BorderThickness="0,2,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}">
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="Preview:" Margin="6,0,20,6"/>
                                <TextBox  x:Name="LblPreview" Margin="6,0,20,6" TextWrapping="Wrap" IsReadOnly="True" BorderBrush="White" Height="41"  />
                            </StackPanel>
                        </Border>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem x:Name="TabItemTwitchBotCommands" Header="Commands" Padding="20,0,0,0">
                <Border Margin="10,0,0,0" BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}">
                    <Grid  Margin="10,16,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{x:Static local:Resources.brw_cmd_trigger}" VerticalAlignment="Top" Width="70" FontStyle="Italic" FontSize="10"  Grid.Row="0" Grid.Column="0" Margin="6,0,0,0" Padding="0,0,0,0"/>
                        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{x:Static local:Resources.brw_cmd_description}" VerticalAlignment="Top" Width="341" FontStyle="Italic" FontSize="10"
                                   Grid.Row="0" Grid.Column="1"/>
                        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{x:Static local:Resources.brw_cmd_enabled}" VerticalAlignment="Top" FontStyle="Italic" FontSize="10"
                                   Grid.Row="0" Grid.Column="2" Width="106"/>

                        <Border Grid.Column="0" Margin="-10,0" BorderThickness="0,1,0,0" Grid.ColumnSpan="3" Grid.Row="3" >
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Accent3}"/>
                            </Border.BorderBrush>
                        </Border>
                        <DockPanel LastChildFill="True" Grid.Column="0"  Grid.Row="2" VerticalAlignment="Center" >
                            <TextBlock Text="!" VerticalAlignment="Center" Margin="6,0,0,0" HorizontalAlignment="Left"/>
                            <TextBox x:Name="TextBoxTriggerSong" Tag="song" Text="song" TextChanged="TextBoxTrigger_TextChanged" Style="{StaticResource TextBoxTextBlock}" PreviewKeyDown="TextBoxTrigger_PreviewKeyDown" />
                        </DockPanel>
                        <TextBlock Text="{x:Static local:Resources.brw_cmd_song}" VerticalAlignment="Center" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left"/>
                        <controls:ToggleSwitch x:Name="TglBotcmdSong" HorizontalAlignment="Left" VerticalAlignment="Center" Height="32" Toggled="tgl_botcmd_song_Toggled" OffContent="{x:Static local:Resources.brw_cmd_off}" OnContent="{x:Static local:Resources.brw_cmd_on}" Grid.Row="2" Grid.Column="2" MinWidth="0"/>
                        <Border Margin="-10,0"  Grid.Column="0" BorderThickness="0,1,0,0" Grid.ColumnSpan="3" Grid.Row="4" >
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Accent3}"/>
                            </Border.BorderBrush>
                        </Border>
                        <DockPanel LastChildFill="True" Grid.Column="0"  Grid.Row="3" VerticalAlignment="Center" >
                            <TextBlock Text="!" VerticalAlignment="Center" Margin="6,0,0,0" HorizontalAlignment="Left"/>
                            <TextBox PreviewKeyDown="TextBoxTrigger_PreviewKeyDown"  x:Name="TextBoxTriggerPos" Tag="pos" Text="pos" TextChanged="TextBoxTrigger_TextChanged" Style="{StaticResource TextBoxTextBlock}"/>
                        </DockPanel>
                        <!--<TextBlock Grid.Column="0"  Text="!pos" Width="70" VerticalAlignment="Center" Grid.Row="2" Margin="6,0,0,0"/>-->
                        <TextBlock Text="{x:Static local:Resources.brw_cmd_pos}" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left"/>
                        <controls:ToggleSwitch x:Name="TglBotcmdPos" HorizontalAlignment="Left" VerticalAlignment="Center" Height="32" Toggled="tgl_botcmd_pos_Toggled" OffContent="{x:Static local:Resources.brw_cmd_off}" OnContent="{x:Static local:Resources.brw_cmd_on}" Grid.Row="3" Grid.Column="2" MinWidth="0" />
                        <Border Margin="-10,0"  Grid.Column="0" BorderThickness="0,1,0,0" Grid.ColumnSpan="3" Grid.Row="5" >
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Accent3}"/>
                            </Border.BorderBrush>
                        </Border>
                        <DockPanel LastChildFill="True" Grid.Column="0"  Grid.Row="4" VerticalAlignment="Center" >
                            <TextBlock Text="!" VerticalAlignment="Center" Margin="6,0,0,0" HorizontalAlignment="Left"/>
                            <TextBox PreviewKeyDown="TextBoxTrigger_PreviewKeyDown" x:Name="TextBoxTriggerNext" Tag="next" Text="next" TextChanged="TextBoxTrigger_TextChanged" Style="{StaticResource TextBoxTextBlock}" VerticalAlignment="Top" />
                        </DockPanel>
                        <!--<TextBlock Grid.Column="0" Text="!next" Width="70" VerticalAlignment="Center" Grid.Row="3" Margin="6,0,0,0"/>-->
                        <TextBlock Text="{x:Static local:Resources.brw_cmd_next}" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left"/>
                        <controls:ToggleSwitch x:Name="TglBotcmdNext" HorizontalAlignment="Left" VerticalAlignment="Center" Height="32" Toggled="tgl_botcmd_next_Toggled" OffContent="{x:Static local:Resources.brw_cmd_off}" OnContent="{x:Static local:Resources.brw_cmd_on}" Grid.Row="4" Grid.Column="2" MinWidth="0"/>
                        <Border Margin="-10,0"  Grid.Column="0" BorderThickness="0,1,0,0" Grid.ColumnSpan="3" Grid.Row="6" >
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Accent3}"/>
                            </Border.BorderBrush>
                        </Border>
                        <DockPanel LastChildFill="True" Grid.Column="0"  Grid.Row="5" VerticalAlignment="Center" >
                            <TextBlock Text="!" VerticalAlignment="Center" Margin="6,0,0,0" HorizontalAlignment="Left"/>
                            <TextBox PreviewKeyDown="TextBoxTrigger_PreviewKeyDown" x:Name="TextBoxTriggerSkip" Tag="skip" Text="skip" TextChanged="TextBoxTrigger_TextChanged" Style="{StaticResource TextBoxTextBlock}" VerticalAlignment="Top" />
                        </DockPanel>
                        <!--<TextBlock Grid.Column="0" Text="!skip" Width="70" VerticalAlignment="Center" Grid.Row="4" Margin="6,0,0,0"/>-->

                        <TextBlock Text="{x:Static local:Resources.brw_cmd_skip}" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Grid.Row="5" Grid.Column="1" HorizontalAlignment="Left"/>
                        <controls:ToggleSwitch x:Name="TglBotcmdSkip" HorizontalAlignment="Left" VerticalAlignment="Center" Toggled="tgl_botcmd_skip_Toggled" OffContent="{x:Static local:Resources.brw_cmd_off}" OnContent="{x:Static local:Resources.brw_cmd_on}" MinWidth="0" Grid.Row="5" Grid.Column="2"/>

                        <DockPanel LastChildFill="True" Grid.Column="0"  Grid.Row="6" VerticalAlignment="Center" >
                            <TextBlock Text="!" VerticalAlignment="Center" Margin="6,0,0,0" HorizontalAlignment="Left"/>
                            <TextBox PreviewKeyDown="TextBoxTrigger_PreviewKeyDown" x:Name="TextBoxTriggerVoteskip" Tag="voteskip" Text="voteskip" TextChanged="TextBoxTrigger_TextChanged" Style="{StaticResource TextBoxTextBlock}" VerticalAlignment="Top" />
                        </DockPanel>
                        <!--<TextBlock Grid.Column="0" Text="!voteskip" Width="70" VerticalAlignment="Center" Grid.Row="5" Margin="6,0,0,0" Grid.RowSpan="2"/>-->
                        <TextBlock Text="{x:Static local:Resources.brw_cmd_skipvote}" VerticalAlignment="Center" TextWrapping="WrapWithOverflow" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Left" Grid.RowSpan="2"/>
                        <controls:ToggleSwitch x:Name="TglBotcmdSkipvote" HorizontalAlignment="Left" VerticalAlignment="Center" Toggled="tgl_botcmd_skipvote_Toggled" OffContent="{x:Static local:Resources.brw_cmd_off}" OnContent="{x:Static local:Resources.brw_cmd_on}" MinWidth="0" Grid.Row="6" Grid.Column="2"/>

                        <Label Content="{x:Static local:Resources.brw_cmd_skipvotecount}" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Right" Width="Auto"/>
                        <controls:NumericUpDown x:Name="NudSkipVoteCount" Width="98" HorizontalAlignment="Left" ValueChanged="NudSkipVoteCount_ValueChanged" NumericInputMode="Numbers" ParsingNumberStyle="Integer" Grid.Row="7" Grid.Column="2" Height="26" Margin="0,0,0,6" />
                        <Border Margin="-10,0"  Grid.Column="0" BorderThickness="0,1,0,0" Grid.ColumnSpan="3" Grid.Row="2" >
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Accent3}"/>
                            </Border.BorderBrush>
                        </Border>
                        <DockPanel LastChildFill="True" Grid.Column="0"  Grid.Row="1" VerticalAlignment="Center" >
                            <TextBlock Text="!" VerticalAlignment="Center" Margin="6,0,0,0" HorizontalAlignment="Left"/>
                            <TextBox x:Name="TextBoxTriggerSsr" Tag="ssr" Text="ssr" TextChanged="TextBoxTrigger_TextChanged" Style="{StaticResource TextBoxTextBlock}" PreviewKeyDown="TextBoxTrigger_PreviewKeyDown" />
                        </DockPanel>
                        <TextBlock Text="{x:Static local:Resources.sw_SpotifySR_SRCommand}" VerticalAlignment="Center" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left"/>
                        <controls:ToggleSwitch x:Name="TglBotcmdSsr" HorizontalAlignment="Left" VerticalAlignment="Center" Height="32" Toggled="Tgl_botcmd_ssr_OnToggled_Toggled" OffContent="{x:Static local:Resources.brw_cmd_off}" OnContent="{x:Static local:Resources.brw_cmd_on}" Grid.Row="1" Grid.Column="2" MinWidth="0"/>

                        <Border Margin="-10,0"  Grid.Column="0" BorderThickness="0,1,0,0" Grid.ColumnSpan="3" Grid.Row="8" >
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Accent3}"/>
                            </Border.BorderBrush>
                        </Border>
                        <DockPanel LastChildFill="True" Grid.Column="0"  Grid.Row="8" VerticalAlignment="Center" >
                            <TextBlock Text="!" VerticalAlignment="Center" Margin="6,0,0,0" HorizontalAlignment="Left"/>
                            <TextBox x:Name="TextBoxTriggerRemove" Tag="remove" Text="remove" TextChanged="TextBoxTrigger_TextChanged" Style="{StaticResource TextBoxTextBlock}" PreviewKeyDown="TextBoxTrigger_PreviewKeyDown" />
                        </DockPanel>
                        <TextBlock Text="{x:Static local:Resources.brw_cmd_remove}" VerticalAlignment="Center" Grid.Row="8" Grid.Column="1" HorizontalAlignment="Left"/>
                        <controls:ToggleSwitch x:Name="TglBotcmdRemove" HorizontalAlignment="Left" VerticalAlignment="Center" Height="32" Toggled="Tgl_botcmd_remove_OnToggled_Toggled" OffContent="{x:Static local:Resources.brw_cmd_off}" OnContent="{x:Static local:Resources.brw_cmd_on}" Grid.Row="8" Grid.Column="2" MinWidth="0"/>

                        <Border Margin="-10,0"  Grid.Column="0" BorderThickness="0,1,0,0" Grid.ColumnSpan="3" Grid.Row="9" >
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Accent3}"/>
                            </Border.BorderBrush>
                        </Border>
                        <DockPanel LastChildFill="True" Grid.Column="0"  Grid.Row="9" VerticalAlignment="Center" >
                            <TextBlock Text="!" VerticalAlignment="Center" Margin="6,0,0,0" HorizontalAlignment="Left"/>
                            <TextBox x:Name="TextBoxTriggerSonglike" Tag="like" Text="songlike" TextChanged="TextBoxTrigger_TextChanged" Style="{StaticResource TextBoxTextBlock}" PreviewKeyDown="TextBoxTrigger_PreviewKeyDown" />
                        </DockPanel>
                        <TextBlock Text="{x:Static local:Resources.brw_cmd_songlike}" VerticalAlignment="Center" Grid.Row="9" Grid.Column="1" HorizontalAlignment="Left"/>
                        <controls:ToggleSwitch x:Name="TglBotcmdSonglike" HorizontalAlignment="Left" VerticalAlignment="Center" Height="32" Toggled="Tgl_botcmd_songlike_OnToggled_Toggled" OffContent="{x:Static local:Resources.brw_cmd_off}" OnContent="{x:Static local:Resources.brw_cmd_on}" Grid.Row="9" Grid.Column="2" MinWidth="0"/>

                        <Border Margin="-10,0"  Grid.Column="0" BorderThickness="0,1,0,0" Grid.ColumnSpan="3" Grid.Row="10" >
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource MahApps.Colors.Accent3}"/>
                            </Border.BorderBrush>
                        </Border>
                        <DockPanel LastChildFill="True" Grid.Column="0"  Grid.Row="10" VerticalAlignment="Center" >
                            <TextBlock Text="!play !pause" VerticalAlignment="Center" Margin="6,0,0,0" HorizontalAlignment="Left"/>
                        </DockPanel>
                        <TextBlock Text="{x:Static local:Resources.brw_cmd_playpause}" VerticalAlignment="Center" Grid.Row="10" Grid.Column="1" HorizontalAlignment="Left"/>
                        <controls:ToggleSwitch x:Name="TglBotcmdPlayPause" HorizontalAlignment="Left" VerticalAlignment="Center" Height="32" Toggled="Tgl_botcmd_PlayPause_OnToggled_Toggled" OffContent="{x:Static local:Resources.brw_cmd_off}" OnContent="{x:Static local:Resources.brw_cmd_on}" Grid.Row="10" Grid.Column="2" MinWidth="0"/>

                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="Spotify">
                <Border Margin="10,0,0,0" BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}">
                    <Grid Margin="10,16,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel x:Name="PnlSpotify" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0,0,0,6">
                            <Border CornerRadius="40" Width="60" Height="60" BorderThickness="3" BorderBrush="{DynamicResource MahApps.Brushes.Accent}">
                                <Border.Background>
                                    <ImageBrush x:Name="ImgSpotifyProfile" Stretch="Fill" ImageSource="/songify.ico" Opacity="1"/>
                                </Border.Background>
                            </Border>
                            <Label x:Name="LblSpotifyAcc" Content="{x:Static local:Resources.sw_Integration_SpotifyLinked}"
                                           HorizontalAlignment="Left" VerticalAlignment="Center" Margin="16,0,0,0" />
                        </DockPanel>
                        <Button Grid.Row="0" x:Name="BtnSpotifyLink" Content="{x:Static local:Resources.sw_Integration_btnLink}" VerticalAlignment="Center"
                                        Click="btn_spotifyLink_Click" HorizontalAlignment="Right" Width="90" />
                        <controls:ToggleSwitch x:Name="TglswSpotify" FontFamily="Segoe UI"
                                           FontSize="12"
                                           ContentPadding="0" VerticalAlignment="Top"
                                           Padding="5,0,0,0" Toggled="Tglsw_Spotify_IsCheckedChanged"
                                           OffContent="{x:Static local:Resources.sw_tcSpotify_UseSongifyApp}"
                                           OnContent="{x:Static local:Resources.sw_tcSpotify_UseOwnApp}" Grid.Row="1" Margin="0,0,0,6" />
                        <TextBox x:Name="TbClientId" Height="23"
                             TextWrapping="Wrap" VerticalAlignment="Top"
                             TextChanged="tb_ClientID_TextChanged" HorizontalAlignment="Right" Width="270" Grid.Row="2" />
                        <PasswordBox x:Name="TbClientSecret" Height="23"
                                 VerticalAlignment="Top" PasswordChanged="tb_ClientSecret_PasswordChanged" HorizontalAlignment="Right" Width="270" Grid.Row="3" />
                        <Label Content="Client ID" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="2" Margin="0,0,0,6" />
                        <Label Content="Client Secret" HorizontalAlignment="Left"
                           VerticalAlignment="Top" Grid.Row="3" Margin="0,0,0,6" />
                        <Button x:Name="BtnOwnAppHelp" Content="?" VerticalAlignment="Stretch" Click="btn_OwnAppHelp_Click" HorizontalAlignment="Right" Grid.Row="1" Width="32" Margin="0,0,0,6" />
                        <Label Grid.Row="4" Content="{x:Static local:Resources.sw_tcSpotify_SongLikeLabel}" ToolTip="{x:Static local:Resources.sw_tcSpotify_SongLikeLabelTooltip}" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="4" Width="270">
                            <ComboBox x:Name="CbSpotifyPlaylist" HorizontalAlignment="Right" Width="238" VerticalAlignment="Top"  SelectionChanged="cb_SpotifyPlaylist_SelectionChanged" Margin="0,0,6,0" />
                            <Button x:Name="BtnReloadPlaylists" Width="26" Height="26" HorizontalAlignment="Right" Click="BtnReloadPlaylists_Click">
                                <Button.Content>
                                    <iconPacks:PackIconForkAwesome Kind="Refresh" Width="12" Height="12" />
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        <StackPanel Grid.Row="5" HorizontalAlignment="Right" Orientation="Horizontal">
                            <TextBlock TextWrapping="Wrap" Text="{x:Static local:Resources.sw_tc_Spotify_AddSongsToPlaylist}" Width="223" Padding="0,5,5,5"/>
                            <controls:ToggleSwitch x:Name="TglAddToPlaylist" VerticalAlignment="Center" Width="19" MinWidth="46" OffContent="" OnContent="" Toggled="TglAddToPlaylist_Toggled"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="{x:Static local:Resources.sw_tc_WebServer}">
                <Border BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}" Margin="10,0,0,0">
                    <Grid Margin="10,16,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="32"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Content="{x:Static local:Resources.sw_WebServer_Port}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <controls:NumericUpDown Minimum="1025" Maximum="66535" x:Name="NudServerPort" Grid.Row="0" Grid.Column="0" HideUpDownButtons="True" Width="80" HorizontalAlignment="Right" VerticalAlignment="Center" ValueChanged="NudServerPort_ValueChanged" MinimumReached="NudServerPort_MinimumReached" MaximumReached="NudServerPort_MaximumReached"></controls:NumericUpDown>
                        <Button x:Name="BtnWebserverStart" Content="{x:Static local:Resources.sw_WebServer_StartWebServer}" HorizontalAlignment="Right" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Click="BtnWebserverStart_Click"></Button>
                        <controls:ToggleSwitch x:Name="TglAutoStartWebserver" VerticalAlignment="Center" Content="{x:Static local:Resources.sw_WebServer_AutoStart}" Toggled="TglAutoStartWebserver_Toggled" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="0,4,0,4" Height="32" />
                        <Button x:Name="BtnWebserverOpenUrl" Click="BtnWebserverOpenUrl_OnClick"  Content="{x:Static local:Resources.sw_WebServer_OpenWebsite}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center"></Button>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="{x:Static local:Resources.sw_tc_Config}">
                <Border BorderThickness="2,0,0,0" BorderBrush="{DynamicResource MahApps.Brushes.Accent3}" Margin="10,0,0,0">
                    <Grid Margin="10,12,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <controls:ToggleSwitch x:Name="TglBetaUpdates"
                                               Content="{x:Static local:Resources.sw_Config_GetBetaUpdates}" VerticalAlignment="Top" Grid.Row="0" Grid.Column="0"
                                               HorizontalAlignment="Stretch" Toggled="TglBetaUpdates_Toggled" />
                        <Button x:Name="BtnExportConfig" Content="{x:Static local:Resources.sw_Config_Export}"
                                HorizontalAlignment="Right" VerticalAlignment="Top" Width="170" Click="Btn_ExportConfig_Click"
                                Grid.Row="0" Grid.Column="1" />
                        <Button x:Name="BtnImportConfig" Content="{x:Static local:Resources.sw_Config_Import}"
                            HorizontalAlignment="Right" VerticalAlignment="Top" Width="170"
                            Click="Btn_ImportConfig_Click" Grid.Row="1" Grid.Column="1" Visibility="Collapsed" />
                        <Button x:Name="BtnResetConfig" Content="{x:Static local:Resources.sw_Config_ResetConfig}" HorizontalAlignment="Right"
                            VerticalAlignment="Top" Width="170" Click="Btn_ResetConfig_Click" Grid.Row="1" Grid.Column="1" />
                        <Label Grid.Column="0" Content="Twitch Auth Ports" Grid.Row="2"/>
                        <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Vertical">
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Redirect Port:" Width="80"/>
                                <ComboBox x:Name="ComboboxRedirectPort" MinWidth="100" SelectionChanged="ComboboxRedirectPort_SelectionChanged"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                                <Label Content="Fetch Port:" Width="80"/>
                                <ComboBox x:Name="ComboboxfetchPort" MinWidth="100" SelectionChanged="ComboboxfetchPort_SelectionChanged"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Border>
            </TabItem>
        </TabControl>
    </Grid>
</controls:MetroWindow>